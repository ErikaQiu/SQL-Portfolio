USE PORTFOLIOPROJECT;
SELECT * FROM VACCINATIONS;
SELECT * FROM DEATHS;
-- SELECT DATA THAT I NEED
SELECT LOCATION, DATE,POPULATION, TOTAL_CASES, NEW_CASES, TOTAL_DEATHS
FROM DEATHS
ORDER BY LOCATION, DATE;
-- TOTAL CASES V.S. TOTAL DEATHS
SELECT LOCATION, DATE, TOTAL_CASES, TOTAL_DEATHS, (TOTAL_DEATHS/TOTAL_CASES)*100 AS DEATH_RATIO 
FROM DEATHS 
WHERE LOCATION LIKE '%STATE%'
ORDER BY LOCATION, DATE; 
-- POPULATION V.S. TOTAL CASES
SELECT LOCATION, DATE, TOTAL_CASES, POPULATION, (TOTAL_CASES/POPULATION)*100 AS INFECTED_RATION
FROM DEATHS
WHERE LOCATION LIKE '%STATES%'
ORDER BY LOCATION, DATE;

-- MAX INFECTED PEOPLE COUNTRY COMPARE TO POPULATION
SELECT LOCATION, POPULATION, MAX(TOTAL_CASES) AS HIGHESTINFECTION, MAX((TOTAL_CASES/POPULATION)*100) AS INFECTED_RATION
FROM DEATHS
GROUP BY LOCATION, POPULATION
ORDER BY INFECTED_RATION DESC;

-- SHOWING COUNTRIES WITH THE HIGHEST DEATHS COUNT 
SELECT LOCATION, POPULATION, MAX(TOTAL_DEATHS) AS HIGHESTDEATHS
FROM DEATHS
WHERE CONTINENT IS NOT NULL
GROUP BY LOCATION,POPULATION
ORDER BY HIGHESTDEATHS DESC;

SELECT CONTINENT,MAX(TOTAL_DEATHS) AS HIGHESTDEATHS
FROM DEATHS
WHERE CONTINENT IS NOT NULL
GROUP BY CONTINENT
ORDER BY HIGHESTDEATHS DESC;

SELECT LOCATION, MAX(TOTAL_DEATHS) AS HIGHESTDEATHS
FROM DEATHS
WHERE CONTINENT IS NULL
GROUP BY LOCATION
ORDER BY HIGHESTDEATHS DESC;


-- global numbers
SELECT date, SUM(new_cases) as NEW_CASE,SUM(new_deaths) AS NEW_DEATHS, 
(SUM(new_deaths)/SUM(new_cases))*100 as Deathpercentage
from Deaths
where continent IS NOT NULL
GROUP BY date
order by date, new_case;

SELECT * FROM VACCINATIONS
JOIN DEATHS
ON VACCINATIONS.LOCATION = DEATHS.LOCATION
AND VACCINATIONS.DATE = DEATHS.DATE;

-- LOOKING AT TOTAL POPULATION AND VACCINATION RATE
SELECT DEATHS.CONTINENT,DEATHS.LOCATION,DEATHS.DATE,DEATHS.POPULATION,VACCINATIONS.NEW_VACCINATIONS
,SUM(VACCINATIONS.NEW_VACCINATIONS) OVER (PARTITION BY deaths.LOCATION order by deaths.location,deaths.date)
as rolling_people_vaccinated
FROM VACCINATIONS
JOIN DEATHS
 ON VACCINATIONS.LOCATION = DEATHS.LOCATION 
 AND VACCINATIONS.DATE = DEATHS.DATE
WHERE DEATHS.CONTINENT IS NOT NULL
ORDER BY 2,3;
 
-- use CTE
WITH pop_vac 
as
(SELECT DEATHS.CONTINENT,DEATHS.LOCATION,DEATHS.DATE,DEATHS.POPULATION,VACCINATIONS.NEW_VACCINATIONS
,SUM(VACCINATIONS.NEW_VACCINATIONS) OVER (PARTITION BY deaths.LOCATION order by deaths.location,deaths.date)
as rolling_people_vaccinated
FROM VACCINATIONS
JOIN DEATHS
 ON VACCINATIONS.LOCATION = DEATHS.LOCATION 
 AND VACCINATIONS.DATE = DEATHS.DATE
WHERE DEATHS.CONTINENT IS NOT NULL
ORDER BY 2,3)
SELECT *, (ROLLING_PEOPLE_VACCINATED/POPULATION)*100 AS VACCINATED_RATE FROM POP_VAC;

-- TEMP TABLE
CREATE TABLE PERCENTVACCINATION
(CONTINENT VARCHAR(50),
LOCATION VARCHAR(50),
DATE DATETIME,
POPULATION NUMERIC,
NEW_VACCINATION NUMERIC,
ROLLING_PEOPLE_VACCINATED NUMERIC);

INSERT INTO PERCENTVACCINATION
SELECT DEATHS.CONTINENT,DEATHS.LOCATION,DEATHS.DATE,DEATHS.POPULATION,VACCINATIONS.NEW_VACCINATIONS
,SUM(VACCINATIONS.NEW_VACCINATIONS) OVER (PARTITION BY deaths.LOCATION order by deaths.location,deaths.date)
as rolling_people_vaccinated
FROM VACCINATIONS
JOIN DEATHS
 ON VACCINATIONS.LOCATION = DEATHS.LOCATION 
 AND VACCINATIONS.DATE = DEATHS.DATE
WHERE DEATHS.CONTINENT IS NOT NULL
ORDER BY 2,3;

SELECT *,(ROLLING_PEOPLE_VACCINATED/POPULATION)*100 AS PERCENTVACCINATION
FROM PERCENTVACCINATION;

-- CREATING VIEW TO STORE DATA FOR LATER VISUALIZATION
CREATE VIEW PERCENT_VACCINATION AS 
SELECT DEATHS.CONTINENT,DEATHS.LOCATION,DEATHS.DATE,DEATHS.POPULATION,VACCINATIONS.NEW_VACCINATIONS
,SUM(VACCINATIONS.NEW_VACCINATIONS) OVER (PARTITION BY deaths.LOCATION order by deaths.location,deaths.date)
as rolling_people_vaccinated
FROM VACCINATIONS
JOIN DEpercent_vaccinationATHS
 ON VACCINATIONS.LOCATION = DEATHS.LOCATION 
 AND VACCINATIONS.DATE = DEATHS.DATE
WHERE DEATHS.CONTINENT IS NOT NULL
;
